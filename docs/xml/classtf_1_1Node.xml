<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classtf_1_1Node" kind="class" language="C++" prot="private">
    <compoundname>tf::Node</compoundname>
    <innerclass refid="structtf_1_1Node_1_1Async" prot="private">tf::Node::Async</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Condition" prot="private">tf::Node::Condition</innerclass>
    <innerclass refid="structtf_1_1Node_1_1cudaFlow" prot="private">tf::Node::cudaFlow</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Dynamic" prot="private">tf::Node::Dynamic</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Module" prot="private">tf::Node::Module</innerclass>
    <innerclass refid="structtf_1_1Node_1_1MultiCondition" prot="private">tf::Node::MultiCondition</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Runtime" prot="private">tf::Node::Runtime</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Semaphores" prot="private">tf::Node::Semaphores</innerclass>
    <innerclass refid="structtf_1_1Node_1_1SilentAsync" prot="private">tf::Node::SilentAsync</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Static" prot="private">tf::Node::Static</innerclass>
    <innerclass refid="structtf_1_1Node_1_1syclFlow" prot="private">tf::Node::syclFlow</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtf_1_1Node_1aaf8f8c92043211fc831918da93967c5b" prot="private" static="no">
        <type>std::variant&lt; std::monostate, Static, Dynamic, Condition, MultiCondition, Module, Async, SilentAsync, cudaFlow, syclFlow, Runtime &gt;</type>
        <definition>using tf::Node::handle_t =  std::variant&lt; std::monostate, Static, Dynamic, Condition, MultiCondition, Module, Async, SilentAsync, cudaFlow, syclFlow, Runtime &gt;</definition>
        <argsstring></argsstring>
        <name>handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="384" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1Node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="269" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1aaa7728226b6ce66782e8816b1658dd9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Task</definition>
        <argsstring></argsstring>
        <name>Task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="270" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a0aa0e12e4a0ba023033e808fb2132fdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TaskView</definition>
        <argsstring></argsstring>
        <name>TaskView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="271" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1af043dd6f6a359602805d9c7dd7539cca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Taskflow</definition>
        <argsstring></argsstring>
        <name>Taskflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="272" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a763b2f90bc53f92d680a635fe28e858e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Executor</definition>
        <argsstring></argsstring>
        <name>Executor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="273" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a61184f9bd9c801d0a5eccecfdbddc641" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class FlowBuilder</definition>
        <argsstring></argsstring>
        <name>FlowBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="274" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1aa48945297ede77a161defc88033ce8a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Subflow</definition>
        <argsstring></argsstring>
        <name>Subflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="275" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1af3d14e26ba8af9e6cc5a32aad8446de7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Runtime</definition>
        <argsstring></argsstring>
        <name>Runtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="276" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1aa78ccd142a22698289c2c823bfa14241" prot="private" static="no" mutable="no">
        <type></type>
        <definition>tf::Node::TF_ENABLE_POOLABLE_ON_THIS</definition>
        <argsstring></argsstring>
        <name>TF_ENABLE_POOLABLE_ON_THIS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="278" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4a022f2346fe70d56910bd4108dd0e05" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string tf::Node::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="432" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a97240d40fe462ab1df97aee10a966965" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned tf::Node::_priority</definition>
        <argsstring></argsstring>
        <name>_priority</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="434" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a5458c5905ee4b28b70f368a522c198f2" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* tf::Node::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="436" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a83b494fd50500454e9fb1b8afe8fc65c" prot="private" static="no" mutable="no">
        <type>handle_t</type>
        <definition>handle_t tf::Node::_handle</definition>
        <argsstring></argsstring>
        <name>_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="438" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a45a3783b67e19091d8e02e5ab56c6b63" prot="private" static="no" mutable="no">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt;Node*&gt; tf::Node::_successors</definition>
        <argsstring></argsstring>
        <name>_successors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="440" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4f549abd6361156430572e57a1f89aec" prot="private" static="no" mutable="no">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt;Node*&gt; tf::Node::_dependents</definition>
        <argsstring></argsstring>
        <name>_dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="441" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ae771748b9bb4f9a01116ddbc31f7bc2d" prot="private" static="no" mutable="no">
        <type>Topology *</type>
        <definition>Topology* tf::Node::_topology</definition>
        <argsstring></argsstring>
        <name>_topology</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="443" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a20e0970afa16e43872a9a2f8839e9540" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* tf::Node::_parent</definition>
        <argsstring></argsstring>
        <name>_parent</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="445" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a19bbe02799273a6df9b639d22813f83c" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/atomic/atomic" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::atomic</ref>&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; tf::Node::_state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="447" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a58f07ec0fb20050fe1d9845ac1d897f6" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/atomic/atomic" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::atomic</ref>&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; tf::Node::_join_counter</definition>
        <argsstring></argsstring>
        <name>_join_counter</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="448" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a26a8c9bfbbd1c62dbd49545d9d49a8f4" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; Semaphores &gt;</type>
        <definition>std::unique_ptr&lt;Semaphores&gt; tf::Node::_semaphores</definition>
        <argsstring></argsstring>
        <name>_semaphores</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="450" column="19" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1a0f13e41390ceb7e3fe884952b39f2d0f" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int tf::Node::CONDITIONED</definition>
        <argsstring></argsstring>
        <name>CONDITIONED</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="281" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1aad8a10e34c51bc4a809aaa8fba7de854" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int tf::Node::DETACHED</definition>
        <argsstring></argsstring>
        <name>DETACHED</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="282" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1aa08558b7c798287cf75b8a2dc322e2de" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int tf::Node::ACQUIRED</definition>
        <argsstring></argsstring>
        <name>ACQUIRED</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="283" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ada61f28d1cbfd66654c77211a8748891" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int tf::Node::READY</definition>
        <argsstring></argsstring>
        <name>READY</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="284" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a89c1a970bbd1b3a4bca7194424142d1e" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static int</type>
        <definition>constexpr static int tf::Node::DEFERRED</definition>
        <argsstring></argsstring>
        <name>DEFERRED</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="285" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1a421d0da10e52e8bd1036676efc63579e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::PLACEHOLDER</definition>
        <argsstring></argsstring>
        <name>PLACEHOLDER</name>
        <initializer>= get_index_v&lt;std::monostate, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="406" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a5714ed4ff69cce23a1db12c258e66439" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::STATIC</definition>
        <argsstring></argsstring>
        <name>STATIC</name>
        <initializer>= get_index_v&lt;Static, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="407" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4d4ef86ad42377c7a914702df4b3204e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::DYNAMIC</definition>
        <argsstring></argsstring>
        <name>DYNAMIC</name>
        <initializer>= get_index_v&lt;Dynamic, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="408" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a923ea39a548a7421f4ec56349c61c1eb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::CONDITION</definition>
        <argsstring></argsstring>
        <name>CONDITION</name>
        <initializer>= get_index_v&lt;Condition, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="409" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1aeb7855e09ce91f0a8c87ed3f4df5cac7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::MULTI_CONDITION</definition>
        <argsstring></argsstring>
        <name>MULTI_CONDITION</name>
        <initializer>= get_index_v&lt;MultiCondition, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="410" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1aab8a9356eb42f9250e548818bbe30ae3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::MODULE</definition>
        <argsstring></argsstring>
        <name>MODULE</name>
        <initializer>= get_index_v&lt;Module, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="411" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ab298b962d4cadbfd38f1a398712e2880" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::ASYNC</definition>
        <argsstring></argsstring>
        <name>ASYNC</name>
        <initializer>= get_index_v&lt;Async, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="412" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a1148aa937d8f332cd32edc8646d4c5c9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::SILENT_ASYNC</definition>
        <argsstring></argsstring>
        <name>SILENT_ASYNC</name>
        <initializer>= get_index_v&lt;SilentAsync, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="413" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ace08c553f7f7ee607f0941e76649092d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::CUDAFLOW</definition>
        <argsstring></argsstring>
        <name>CUDAFLOW</name>
        <initializer>= get_index_v&lt;cudaFlow, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="414" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1abcc36af4cca0b5597c0a8eb936766d2d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::SYCLFLOW</definition>
        <argsstring></argsstring>
        <name>SYCLFLOW</name>
        <initializer>= get_index_v&lt;syclFlow, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="415" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a3aa02694d09b800929ac756239455d8d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto tf::Node::RUNTIME</definition>
        <argsstring></argsstring>
        <name>RUNTIME</name>
        <initializer>= get_index_v&lt;Runtime, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="416" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1Node_1a8e80afe1c9af2b8ef2c928758dd77c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tf::Node::Node</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>Node</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="419" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="573" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a65026753fe6eaf5c4c904b4437aeecef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="421" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="577" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a7133911e093d82e5f5edd73124b60c6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_successors</definition>
        <argsstring>() const</argsstring>
        <name>num_successors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="423" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="623" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1abbb6a85cc8f62682ce8c78ad9851c0e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="424" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="628" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1ad5eb7ac6418e89fccc300986b216510c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_strong_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_strong_dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="425" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="645" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a7dbe963f0173062f3a6164f1ff581c5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_weak_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_weak_dependents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="426" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="633" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a0214bc98366d4c24a1cae941cdffe119" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        <definition>const std::string &amp; tf::Node::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="428" column="21" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="657" bodyend="659"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1Node_1a7e6ccc13774475f9ee23af8d37a5311c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Node::_precede</definition>
        <argsstring>(Node *)</argsstring>
        <name>_precede</name>
        <param>
          <type>Node *</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="452" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="617" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a30ffac5296d61687b8ebb9ff4716a26a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Node::_set_up_join_counter</definition>
        <argsstring>()</argsstring>
        <name>_set_up_join_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="453" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="680" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a4207c300c6ac0c564deef65c73e1ee96" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_is_cancelled</definition>
        <argsstring>() const</argsstring>
        <name>_is_cancelled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="455" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="668" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1aed1c802d5794f881f9c47089003ef62c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_is_conditioner</definition>
        <argsstring>() const</argsstring>
        <name>_is_conditioner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="456" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="662" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1ac5778a60afb44cd54eb0247a04b38a91" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_acquire_all</definition>
        <argsstring>(SmallVector&lt; Node * &gt; &amp;)</argsstring>
        <name>_acquire_all</name>
        <param>
          <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt; &amp;</type>
          <defname>nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="457" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="696" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a69f967fa92024d7b31cc30d010ccf207" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt; Node * &gt; tf::Node::_release_all</definition>
        <argsstring>()</argsstring>
        <name>_release_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="459" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="713" bodyend="724"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="267" column="1" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="267" bodyend="460"/>
    <listofallmembers>
      <member refid="classtf_1_1Node_1ac5778a60afb44cd54eb0247a04b38a91" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_acquire_all</name></member>
      <member refid="classtf_1_1Node_1a5458c5905ee4b28b70f368a522c198f2" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_data</name></member>
      <member refid="classtf_1_1Node_1a4f549abd6361156430572e57a1f89aec" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_dependents</name></member>
      <member refid="classtf_1_1Node_1a83b494fd50500454e9fb1b8afe8fc65c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_handle</name></member>
      <member refid="classtf_1_1Node_1a4207c300c6ac0c564deef65c73e1ee96" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_is_cancelled</name></member>
      <member refid="classtf_1_1Node_1aed1c802d5794f881f9c47089003ef62c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_is_conditioner</name></member>
      <member refid="classtf_1_1Node_1a58f07ec0fb20050fe1d9845ac1d897f6" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_join_counter</name></member>
      <member refid="classtf_1_1Node_1a4a022f2346fe70d56910bd4108dd0e05" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_name</name></member>
      <member refid="classtf_1_1Node_1a20e0970afa16e43872a9a2f8839e9540" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_parent</name></member>
      <member refid="classtf_1_1Node_1a7e6ccc13774475f9ee23af8d37a5311c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_precede</name></member>
      <member refid="classtf_1_1Node_1a97240d40fe462ab1df97aee10a966965" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_priority</name></member>
      <member refid="classtf_1_1Node_1a69f967fa92024d7b31cc30d010ccf207" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_release_all</name></member>
      <member refid="classtf_1_1Node_1a26a8c9bfbbd1c62dbd49545d9d49a8f4" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_semaphores</name></member>
      <member refid="classtf_1_1Node_1a30ffac5296d61687b8ebb9ff4716a26a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_set_up_join_counter</name></member>
      <member refid="classtf_1_1Node_1a19bbe02799273a6df9b639d22813f83c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_state</name></member>
      <member refid="classtf_1_1Node_1a45a3783b67e19091d8e02e5ab56c6b63" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_successors</name></member>
      <member refid="classtf_1_1Node_1ae771748b9bb4f9a01116ddbc31f7bc2d" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_topology</name></member>
      <member refid="classtf_1_1Node_1aa08558b7c798287cf75b8a2dc322e2de" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>ACQUIRED</name></member>
      <member refid="classtf_1_1Node_1ab298b962d4cadbfd38f1a398712e2880" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>ASYNC</name></member>
      <member refid="classtf_1_1Node_1a923ea39a548a7421f4ec56349c61c1eb" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>CONDITION</name></member>
      <member refid="classtf_1_1Node_1a0f13e41390ceb7e3fe884952b39f2d0f" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>CONDITIONED</name></member>
      <member refid="classtf_1_1Node_1ace08c553f7f7ee607f0941e76649092d" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>CUDAFLOW</name></member>
      <member refid="classtf_1_1Node_1a89c1a970bbd1b3a4bca7194424142d1e" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>DEFERRED</name></member>
      <member refid="classtf_1_1Node_1aad8a10e34c51bc4a809aaa8fba7de854" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>DETACHED</name></member>
      <member refid="classtf_1_1Node_1a4d4ef86ad42377c7a914702df4b3204e" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>DYNAMIC</name></member>
      <member refid="classtf_1_1Node_1a763b2f90bc53f92d680a635fe28e858e" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Executor</name></member>
      <member refid="classtf_1_1Node_1a61184f9bd9c801d0a5eccecfdbddc641" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>FlowBuilder</name></member>
      <member refid="classtf_1_1Node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Graph</name></member>
      <member refid="classtf_1_1Node_1aaf8f8c92043211fc831918da93967c5b" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>handle_t</name></member>
      <member refid="classtf_1_1Node_1aab8a9356eb42f9250e548818bbe30ae3" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>MODULE</name></member>
      <member refid="classtf_1_1Node_1aeb7855e09ce91f0a8c87ed3f4df5cac7" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>MULTI_CONDITION</name></member>
      <member refid="classtf_1_1Node_1a0214bc98366d4c24a1cae941cdffe119" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>name</name></member>
      <member refid="classtf_1_1Node_1a8e80afe1c9af2b8ef2c928758dd77c36" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>Node</name></member>
      <member refid="classtf_1_1Node_1abbb6a85cc8f62682ce8c78ad9851c0e5" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_dependents</name></member>
      <member refid="classtf_1_1Node_1ad5eb7ac6418e89fccc300986b216510c" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_strong_dependents</name></member>
      <member refid="classtf_1_1Node_1a7133911e093d82e5f5edd73124b60c6a" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_successors</name></member>
      <member refid="classtf_1_1Node_1a7dbe963f0173062f3a6164f1ff581c5a" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_weak_dependents</name></member>
      <member refid="classtf_1_1Node_1a421d0da10e52e8bd1036676efc63579e" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>PLACEHOLDER</name></member>
      <member refid="classtf_1_1Node_1ada61f28d1cbfd66654c77211a8748891" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>READY</name></member>
      <member refid="classtf_1_1Node_1a3aa02694d09b800929ac756239455d8d" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>RUNTIME</name></member>
      <member refid="classtf_1_1Node_1af3d14e26ba8af9e6cc5a32aad8446de7" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Runtime</name></member>
      <member refid="classtf_1_1Node_1a1148aa937d8f332cd32edc8646d4c5c9" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>SILENT_ASYNC</name></member>
      <member refid="classtf_1_1Node_1a5714ed4ff69cce23a1db12c258e66439" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>STATIC</name></member>
      <member refid="classtf_1_1Node_1aa48945297ede77a161defc88033ce8a6" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Subflow</name></member>
      <member refid="classtf_1_1Node_1abcc36af4cca0b5597c0a8eb936766d2d" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>SYCLFLOW</name></member>
      <member refid="classtf_1_1Node_1aaa7728226b6ce66782e8816b1658dd9a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Task</name></member>
      <member refid="classtf_1_1Node_1af043dd6f6a359602805d9c7dd7539cca" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Taskflow</name></member>
      <member refid="classtf_1_1Node_1a0aa0e12e4a0ba023033e808fb2132fdf" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>TaskView</name></member>
      <member refid="classtf_1_1Node_1aa78ccd142a22698289c2c823bfa14241" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>TF_ENABLE_POOLABLE_ON_THIS</name></member>
      <member refid="classtf_1_1Node_1a65026753fe6eaf5c4c904b4437aeecef" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
